Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_udivmodqi4.o)
                              main.o (__udivmodqi4)
/usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o (exit)
/usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

rx_bit              0x2               main.o
rx_valid            0x1               main.o
bit                 0x2               main.o
min10               0x1               main.o
tick                0x1               main.o
rx_word             0x2               main.o
hr10                0x1               main.o
min                 0x1               main.o
tick1k              0x2               main.o
sec                 0x1               main.o
tick1s              0x1               main.o
hr                  0x1               main.o
ready               0x1               main.o
word                0x2               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x0000000000000200 rw !x
eeprom           0x0000000000810000 0x0000000000000200 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
LOAD main.o
LOAD timeofday.o
LOAD display.o
LOAD uart.o
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/libattiny861a.a
END GROUP
                0x0000000000000000                __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                [0x0000000000800060]                __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x800060
                [0x0000000000002000]                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x2000
                [0x0000000000000200]                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                [0x0000000000000200]                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x4ee
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x16 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_copy_data.o)
                0x0000000000000032                __do_copy_data
 .init4         0x0000000000000048       0x10 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
                0x0000000000000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000058        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
 *(.init9)
 *(.text)
 .text          0x000000000000005c        0x2 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
                0x000000000000005c                __vector_1
                0x000000000000005c                __vector_12
                0x000000000000005c                __bad_interrupt
                0x000000000000005c                __vector_3
                0x000000000000005c                __vector_11
                0x000000000000005c                __vector_13
                0x000000000000005c                __vector_17
                0x000000000000005c                __vector_7
                0x000000000000005c                __vector_5
                0x000000000000005c                __vector_4
                0x000000000000005c                __vector_9
                0x000000000000005c                __vector_15
                0x000000000000005c                __vector_8
                0x000000000000005c                __vector_14
                0x000000000000005c                __vector_10
                0x000000000000005c                __vector_16
                0x000000000000005c                __vector_18
 .text          0x000000000000005e       0xf4 main.o
                0x000000000000005e                __vector_2
                0x00000000000000b2                __vector_6
                0x0000000000000112                ioinit
 .text          0x0000000000000152       0xa0 timeofday.o
                0x0000000000000152                inc_sec
                0x0000000000000170                inc_min
                0x00000000000001a4                inc_hr
                0x00000000000001e2                inc_time
 .text          0x00000000000001f2       0xa0 display.o
                0x00000000000001f2                sr_clk
                0x0000000000000202                set_digit
                0x0000000000000248                set_digits
 .text          0x0000000000000292      0x132 uart.o
                0x0000000000000292                uart_init
                0x00000000000002a2                uart_putc
                0x00000000000002be                uart_busy
                0x00000000000002d0                uart_tick
                0x00000000000003a4                uart_rx_start
                0x00000000000003ba                uart_getc
 .text          0x00000000000003c4        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_udivmodqi4.o)
 .text          0x00000000000003c4        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .text          0x00000000000003c4        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_copy_data.o)
 .text          0x00000000000003c4        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
                0x00000000000003c4                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000003c4      0x10e main.o
                0x00000000000003c4                main
 .text.libgcc.mul
                0x00000000000004d2        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x00000000000004d2       0x18 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_udivmodqi4.o)
                0x00000000000004d2                __udivmodqi4
 .text.libgcc   0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
                0x00000000000004ea                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000004ea        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
                0x00000000000004ea                exit
                0x00000000000004ea                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000004ea        0x4 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000004ee                _etext = .

.data           0x0000000000800060       0x12 load address 0x00000000000004ee
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
 .data          0x0000000000800060        0x1 main.o
                0x0000000000800060                send
 .data          0x0000000000800061        0x0 timeofday.o
 .data          0x0000000000800061        0x0 display.o
 .data          0x0000000000800061        0x0 uart.o
 .data          0x0000000000800061        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_udivmodqi4.o)
 .data          0x0000000000800061        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .data          0x0000000000800061        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_copy_data.o)
 .data          0x0000000000800061        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 .rodata        0x0000000000800061       0x10 display.o
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800072                . = ALIGN (0x2)
 *fill*         0x0000000000800071        0x1 
                0x0000000000800072                _edata = .
                0x0000000000800072                PROVIDE (__data_end, .)

.bss            0x0000000000800072       0x1f
                0x0000000000800072                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800072        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
 .bss           0x0000000000800072        0xc main.o
 .bss           0x000000000080007e        0x0 timeofday.o
 .bss           0x000000000080007e        0x0 display.o
 .bss           0x000000000080007e        0x0 uart.o
 .bss           0x000000000080007e        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_udivmodqi4.o)
 .bss           0x000000000080007e        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .bss           0x000000000080007e        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_copy_data.o)
 .bss           0x000000000080007e        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080007e       0x13 main.o
                0x000000000080007e                rx_bit
                0x0000000000800080                rx_valid
                0x0000000000800081                bit
                0x0000000000800083                min10
                0x0000000000800084                tick
                0x0000000000800085                rx_word
                0x0000000000800087                hr10
                0x0000000000800088                min
                0x0000000000800089                tick1k
                0x000000000080008b                sec
                0x000000000080008c                tick1s
                0x000000000080008d                hr
                0x000000000080008e                ready
                0x000000000080008f                word
                0x0000000000800091                PROVIDE (__bss_end, .)
                0x00000000000004ee                __data_load_start = LOADADDR (.data)
                0x0000000000000500                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800091        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800091                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x1848
 *(.stab)
 .stab          0x0000000000000000      0x900 main.o
 .stab          0x0000000000000900      0x4d4 timeofday.o
                                        0x69c (size before relaxing)
 .stab          0x0000000000000dd4      0x48c display.o
                                        0x654 (size before relaxing)
 .stab          0x0000000000001260      0x5e8 uart.o
                                        0x7b0 (size before relaxing)

.stabstr        0x0000000000000000      0xfa8
 *(.stabstr)
 .stabstr       0x0000000000000000      0xfa8 main.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 timeofday.o
 .comment       0x0000000000000011       0x12 display.o
 .comment       0x0000000000000011       0x12 uart.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x4b0
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x4b0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o

.debug_abbrev   0x0000000000000000      0x470
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x470 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x1a0
 *(.debug_str)
 .debug_str     0x0000000000000000      0x1a0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__DATA_REGION_LENGTH__                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__DATA_REGION_ORIGIN__                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__EEPROM_REGION_LENGTH__                          /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__FUSE_REGION_LENGTH__                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__TEXT_REGION_LENGTH__                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__bad_interrupt                                   /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__bss_end                                         /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
                                                  uart.o
                                                  main.o
__do_copy_data                                    /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_copy_data.o)
                                                  display.o
                                                  main.o
__heap_end                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__init                                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__stack                                           /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__udivmodqi4                                      /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_udivmodqi4.o)
                                                  main.o
__vector_1                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_10                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_11                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_12                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_13                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_14                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_15                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_16                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_17                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_18                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_2                                        main.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_3                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_4                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_5                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_6                                        main.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_7                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_8                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_9                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vector_default                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
__vectors                                         /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
_exit                                             /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
bit                                               uart.o
                                                  main.o
exit                                              /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
hr                                                main.o
                                                  timeofday.o
hr10                                              main.o
                                                  timeofday.o
inc_hr                                            timeofday.o
inc_min                                           timeofday.o
inc_sec                                           timeofday.o
inc_time                                          timeofday.o
ioinit                                            main.o
main                                              main.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny861a.o
min                                               main.o
                                                  timeofday.o
min10                                             main.o
                                                  timeofday.o
ready                                             main.o
rx_bit                                            uart.o
                                                  main.o
rx_valid                                          uart.o
                                                  main.o
rx_word                                           uart.o
                                                  main.o
sec                                               main.o
                                                  timeofday.o
send                                              main.o
set_digit                                         display.o
set_digits                                        display.o
                                                  main.o
sr_clk                                            display.o
tick                                              uart.o
                                                  main.o
tick1k                                            main.o
tick1s                                            main.o
uart_busy                                         uart.o
uart_getc                                         uart.o
                                                  main.o
uart_init                                         uart.o
                                                  main.o
uart_putc                                         uart.o
uart_rx_start                                     uart.o
                                                  main.o
uart_tick                                         uart.o
                                                  main.o
word                                              uart.o
                                                  main.o
